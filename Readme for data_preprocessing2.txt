Readme for data_preprocessing2

Transformer-(Multiclass)Classifier 모델을 훈련 및 검증하기 위한 데이터셋을 만든 과정

0. 모델에 필요한 X, Y 값만을 포함하는 pandas 데이터프레임 제작

0-1. Xenabrowser에서 2개의 tsv 파일 다운로드
     TCGA-STAD.htseq_fpkm-uq_transposed.tsv 
     - 407 * 60484
     - 407명에 대해 각 유전자 ID마다의 mRNA발현량이 기록되어 있음
     - 60484개 중 일부를 X feature 로 삼음
     TCGA-STAD.GDC_phenotype.tsv
     - 544 * 115
     - 544명에 대해 115가지의 표현형 정보가 기록되어 있음
     - 이중에서 종양 악성등급에 대한 1개의 컬럼만을 Y label 로 삼음

0-2. 파이썬 pandas 패키지를 이용하여 두 파일의 기증자 ID를 기준으로 Inner Join 하여 
     407 * 60486 크기의 통합된 데이터프레임을 만들고 중복되는 Ensembl_ID 컬럼을 삭제

0-3. 1차로 위암에 관련된 유전자 1202개 리스트를 뽑고
     2차로 PHGDH 와 단백질 상호작용하는 유전자 369개 리스트를 뽑아 합치고,
     유전자ID를 모르는 17개를 빼서 총 1554개의 유전자 ID 리스트를 만듦

0-4. 2번에서 만든 전체 데이터프레임의 컬럼이름이 3번 리스트에 존재하는 것만 추출하니
     여기서 다시 53개가 빠져 최종적으로 407 * 1501 크기의 데이터프레임이 나왔고
     이를 xy_STAD-related-only3.csv 와 xy_STAD-related-only3.pkl 로 저장함


1. 모델에 넣기 위한 최종 X, Y 값을 위한 numpy 데이터셋 제작 

1-1. 유전자아이디에서 점이하를 버린 리스트를 컬럼으로 하는 데이터프레임을 만들고
     컬럼 이름 오름차순으로 정렬 후, 정답값이 되는 악성 종양 등급 별로 행 정렬

1-2. X, Y 값에 해당하는 컬럼 추출 (407, 1501), (407,)

1-3. 레이블 분포가 균일하게 되게 하면서 train : val : test = 7 : 2 : 1 로 나눔
     이 때 Y 값을 정수로 변환 G1->1, G2->2, G3->3, GX->0

1-4. 트랜스포머 임베딩에 넣기 위해 X 값을 정수로 변환하는데  
     이 때 좀 더 풍부한 표현을 위해 min-max 정규화시키고 
     0 ~ 32 대신 0 ~ 320 사이의 정수로 변환함

1-5. 데이터셋을 저장 (현재는 데이터가 모자라 train + test : val = 8 : 2 로만) 
     STAD_Dataset3_Train.h5, STAD_Dataset3_Test.h5

1-6. 저장이 잘 되었는 지 확인
    

